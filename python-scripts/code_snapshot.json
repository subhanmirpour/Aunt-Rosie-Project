{
  "App.css": "#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}\n",
  "App.jsx": "import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Products from './pages/Products';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"bg-white shadow p-4 mb-4 flex gap-4\">\n        <Link to=\"/\" className=\"text-blue-600 hover:underline\">Dashboard</Link>\n        <Link to=\"/products\" className=\"text-blue-600 hover:underline\">Products</Link>\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<h1 className=\"text-2xl text-center\">Welcome to Aunt Rosie\u2019s</h1>} />\n        <Route path=\"/products\" element={<Products />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n",
  "index.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n",
  "main.jsx": "import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n",
  "lib/supabaseClient.js": "import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey) ",
  "pages/Products.jsx": "import { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\n\nconst Products = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch products on page load\n  useEffect(() => {\n    let mounted = true;\n\n    async function fetchProducts() {\n      try {\n        setIsLoading(true);\n        const { data, error } = await supabase.from('products').select('*');\n        \n        if (error) {\n          console.error('Error fetching products:', error.message);\n          return;\n        }\n\n        if (mounted) {\n          console.log('Successfully fetched products:', data?.length || 0);\n          setProducts(data || []);\n        }\n      } catch (err) {\n        console.error('Unexpected error:', err);\n      } finally {\n        if (mounted) {\n          setIsLoading(false);\n        }\n      }\n    }\n\n    fetchProducts();\n\n    // Cleanup function\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  // Delete handler\n  async function deleteProduct(id) {\n    try {\n      const { error } = await supabase.from('products').delete().eq('productid', id);\n      if (error) {\n        console.error('Delete error:', error.message);\n        return;\n      }\n      // Only update the local state if delete was successful\n      setProducts(products.filter(p => p.productid !== id));\n    } catch (err) {\n      console.error('Unexpected error during delete:', err);\n    }\n  }\n\n  // Format price helper function\n  const formatPrice = (price) => {\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : 'N/A';\n  };\n\n  return (\n    <div className=\"p-6 max-w-5xl mx-auto\">\n      <h2 className=\"text-3xl font-bold text-rose-700 mb-6\">Product List</h2>\n  \n      {isLoading ? (\n        <p className=\"text-gray-500\">Loading products...</p>\n      ) : products.length === 0 ? (\n        <p className=\"text-gray-500\">No products found.</p>\n      ) : (\n        <table className=\"w-full border text-sm\">\n          <thead className=\"bg-slate-100\">\n            <tr>\n              <th className=\"text-left p-2\">Name</th>\n              <th className=\"text-left p-2\">Category</th>\n              <th className=\"text-left p-2\">Size</th>\n              <th className=\"text-left p-2\">Price</th>\n              <th className=\"text-left p-2\">Stock</th>\n              <th className=\"text-left p-2\">Description</th>\n              <th className=\"text-left p-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product.productid} className=\"border-t\">\n                <td className=\"p-2\">{product.productname}</td>\n                <td className=\"p-2\">{product.category}</td>\n                <td className=\"p-2\">{product.size || 'N/A'}</td>\n                <td className=\"p-2\">{formatPrice(product.price)}</td>\n                <td className=\"p-2\">{product.stockquantity || 0}</td>\n                <td className=\"p-2\">{product.description || 'No description'}</td>\n                <td className=\"p-2\">\n                  <button\n                    className=\"text-red-500 hover:underline\"\n                    onClick={() => deleteProduct(product.productid)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n"
}